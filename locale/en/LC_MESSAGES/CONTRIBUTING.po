# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, gemmaro
# This file is distributed under the same license as the Holodule iCalendar
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: Holodule iCalendar \n"
"Report-Msgid-Bugs-To: https://github.com/gemmaro/holodule-ics/issues\n"
"POT-Creation-Date: 2025-05-07 20:14+0900\n"
"PO-Revision-Date: 2025-05-07 20:16+0900\n"
"Last-Translator: gemmaro <gemmaro.dev@gmail.com>\n"
"Language: en\n"
"Language-Team: none\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../CONTRIBUTING.md:1
msgid "開発の手引き"
msgstr "Developer's Guide"

#: ../../CONTRIBUTING.md:3
msgid "ローカルで実行"
msgstr "Running Locally"

#: ../../CONTRIBUTING.md:5
msgid "プロジェクトルートに`.env`ファイルを置き、環境変数を設定してください。 その後、以下を実行します。"
msgstr "Place `.env` with environment variables to project root, then run:"

#: ../../CONTRIBUTING.md:13
msgid "環境変数"
msgstr "Environment Variables"

#: ../../CONTRIBUTING.md:15
msgid "`HOLOCAL_YOUTUBE_KEY`: **必須**です。YouTube Data APIのAPIキーです。"
msgstr "`HOLOCAL_YOUTUBE_KEY`: **Required.** API key of YouTube Data API."

#: ../../CONTRIBUTING.md:16
msgid ""
"`HOLOCAL_PAGE`: "
"取得するホロジュールのページのURLです。「シンプル版」でなければなりません（例：[全体](https://schedule.hololive.tv/simple"
" \"hololive production\")）。"
msgstr ""
"`HOLOCAL_PAGE`: Holodule page URL to get.  Must be a \"シンプル版\" (e.g. "
"[全体](https://schedule.hololive.tv/simple \"hololive production\"))."

#: ../../CONTRIBUTING.md:17
msgid "`HOLOCAL_DIR`: 結果の`ics`ファイルを置くディレクトリです。既定は`public`です。"
msgstr ""
"`HOLOCAL_DIR`: Directory to place result `.ics` files.  Default to "
"`public`."

#: ../../CONTRIBUTING.md:18
msgid "`HOLOCAL_LOGLEVEL`: `logging`モジュールのログ水準です。既定で`INFO`です。"
msgstr "`HOLOCAL_LOGLEVEL`: Loglevel of `logging` module. Default to `INFO`."

#: ../../CONTRIBUTING.md:20
msgid "設計"
msgstr "Design"

#: ../../CONTRIBUTING.md:22
msgid ""
"イベントの動画のURLは、説明欄とURLフィールドの両方に出力しています。 一見すると重複しているようですが、これには理由があります。 "
"基本的に、URLのフィールドは利用した方が良いです。 "
"これは、もしカレンダーアプリが説明欄に含まれるURLを解析しない仕様のとき、リンクの遷移に手間が掛かる可能性があるためです。 "
"一方で、URLのフィールドのみで、説明欄にURLが含まれていない場合も問題があります。 "
"カレンダーアプリの中には、URLのフィールドを解釈しないものがあるためです。 一例ではMicrosoft "
"Outlookのウェブ版がこれに該当します。"
msgstr ""
"The event video URL is output in both the description section and the URL\n"
"field.  At first glance, this may seem redundant, but there is a reason for\n"
"it.  Generally, it is better to use the URL field.  This is because if a\n"
"calendar app does not parse URLs included in the description section, it may\n"
"become cumbersome to access the link.  On the other hand, only including the\n"
"URL in the field without placing it in the description section can also be\n"
"problematic, as some calendar apps do not interpret the URL field.  One\n"
"example of this is the web version of Microsoft Outlook."

#: ../../CONTRIBUTING.md:30
msgid "TODO"
msgstr "TODO"

#: ../../CONTRIBUTING.md:32
msgid "型検査"
msgstr "Type checking"

#: ../../CONTRIBUTING.md:33
msgid "ドキュメント"
msgstr "Documentation"

#: ../../CONTRIBUTING.md:34
msgid "テスト"
msgstr "Test"

#: ../../CONTRIBUTING.md:36
msgid "参考資料"
msgstr "References"

#: ../../CONTRIBUTING.md:38
msgid ""
"[ワークフローにスクリプトを追加する](https://docs.github.com/ja/actions/writing-workflows"
"/choosing-what-your-workflow-does/adding-scripts-to-your-workflow "
"\"GitHub\")"
msgstr ""
"[Adding scripts to your workflow](https://docs.github.com/en/actions"
"/writing-workflows/choosing-what-your-workflow-does/adding-scripts-to-"
"your-workflow \"GitHub\")"

#: ../../CONTRIBUTING.md:40
msgid ""
"[GitHub Actions　のワークフロー構文](https://docs.github.com/ja/actions/writing-"
"workflows/workflow-syntax-for-github-actions \"GitHub\")"
msgstr ""
"[Workflow syntax for GitHub Actions](https://docs.github.com/en/actions"
"/writing-workflows/workflow-syntax-for-github-actions \"GitHub\")"

#: ../../CONTRIBUTING.md:42
msgid ""
"[pipx - On Linux](https://github.com/pypa/pipx?tab=readme-ov-file#on-"
"linux \"GitHub\")"
msgstr ""
"[pipx - On Linux](https://github.com/pypa/pipx?tab=readme-ov-file#on-"
"linux \"GitHub\")"

#: ../../CONTRIBUTING.md:44
msgid ""
"[Python のビルドとテスト](https://docs.github.com/ja/actions/use-cases-and-"
"examples/building-and-testing/building-and-testing-python \"GitHub\")"
msgstr ""
"[Building and testing Python](https://docs.github.com/en/actions/use-"
"cases-and-examples/building-and-testing/building-and-testing-python "
"\"GitHub\")"

#: ../../CONTRIBUTING.md:46
msgid ""
"[deploy-pages](https://github.com/actions/deploy-pages \"GitHub\") and "
"[Deploy GitHub Pages site](https://github.com/marketplace/actions/deploy-"
"github-pages-site \"GitHub\")."
msgstr ""
"[deploy-pages](https://github.com/actions/deploy-pages \"GitHub\") and "
"[Deploy GitHub Pages site](https://github.com/marketplace/actions/deploy-"
"github-pages-site \"GitHub\")."

#: ../../CONTRIBUTING.md:48
msgid ""
"[upload-pages-artifact](https://github.com/actions/upload-pages-artifact "
"\"GitHub\")"
msgstr ""
"[upload-pages-artifact](https://github.com/actions/upload-pages-artifact "
"\"GitHub\")"

#~ msgid "Developing guide"
#~ msgstr ""

#~ msgid "Run locally"
#~ msgstr ""

#~ msgid "Place `.env` with environment variables to project root, then run:"
#~ msgstr ""

#~ msgid "Environment Variables"
#~ msgstr ""

#~ msgid "`HOLODULE_YOUTUBE_KEY`: **Required.** API key of YouTube Data API."
#~ msgstr ""

#~ msgid ""
#~ "`HOLODULE_PAGE`: Holodule page URL to "
#~ "get.  Must be a `シンプル版` (e.g. [全"
#~ " 体](https://schedule.hololive.tv/simple \"hololive "
#~ "production\"))."
#~ msgstr ""

#~ msgid ""
#~ "`HOLODULE_DIR`: Directory to place result "
#~ "`.ics` files.  Default to `public`."
#~ msgstr ""

#~ msgid "`HOLODULE_LOGLEVEL`: Loglevel of `logging` module. Default to `INFO`."
#~ msgstr ""

#~ msgid "Type checking"
#~ msgstr ""

#~ msgid "Documentation"
#~ msgstr ""

#~ msgid "Tests"
#~ msgstr ""

#~ msgid "References"
#~ msgstr ""

